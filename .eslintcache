[{"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\index.js":"1","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\App.js":"2","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\store\\index.js":"3","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\UI\\Card.js":"4","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\UI\\Button.js":"5","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\Data\\Data.js":"6","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Header\\Header.js":"7","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\Menu.js":"8","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\DropDown.js":"9","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\DropDownButton.js":"10","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItems.js":"11","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItemsButtonArray.js":"12","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItemButton.js":"13"},{"size":251,"mtime":1642023682315,"results":"14","hashOfConfig":"15"},{"size":1319,"mtime":1642117364577,"results":"16","hashOfConfig":"15"},{"size":6048,"mtime":1642162394989,"results":"17","hashOfConfig":"15"},{"size":244,"mtime":1642026542713,"results":"18","hashOfConfig":"15"},{"size":441,"mtime":1642061049740,"results":"19","hashOfConfig":"15"},{"size":5354,"mtime":1642018055497,"results":"20","hashOfConfig":"15"},{"size":482,"mtime":1642115379645,"results":"21","hashOfConfig":"15"},{"size":756,"mtime":1642116641408,"results":"22","hashOfConfig":"15"},{"size":3034,"mtime":1642156889047,"results":"23","hashOfConfig":"15"},{"size":535,"mtime":1642156320762,"results":"24","hashOfConfig":"15"},{"size":1854,"mtime":1642163496248,"results":"25","hashOfConfig":"15"},{"size":583,"mtime":1642117912363,"results":"26","hashOfConfig":"15"},{"size":773,"mtime":1642117828279,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e9cpdh",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\index.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\App.js",[],["57","58"],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\store\\index.js",["59","60","61"],"/*\r\nThis file is for Redux , I used createSlice method from redux toolkit lib , This method\r\nAllow us to write code and manipulate state in mutable way , this method will handle the state manipulation it self.\r\n\r\nI used redux to store active selected filte (size , color ,...)\r\nand store selectedItems Object in this format of the same Data shared:\r\n\r\n {\r\n    size: [\r\n        {\r\n            id: \"2x3\",\r\n            title: \"2' X 3'\",\r\n        },\r\n        {\r\n            id: \"3x5\",\r\n            title: \"3' X 5'\",\r\n        }],\r\n        color:[\r\n        ....\r\n        ],....\r\n\r\n\r\n\r\n*/\r\nimport { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = { openedDropDownTitle: null, selectedItemsObj: null }\r\n\r\nconst selectedSilce = createSlice({\r\n    name: \"selectedSilce\",\r\n    initialState,\r\n    reducers: {\r\n        //Handle Active filter like size, color ,,,\r\n        toggleMenue(state, action) {\r\n\r\n            state.openedDropDownTitle = action.payload\r\n\r\n        },\r\n        //Add selected Items that selected and then click apply\r\n        addSelectedItems(state, action) {\r\n            const key = action.payload.filterKey;\r\n            const selectedValues = action.payload.selectedItems\r\n\r\n            let updatedObjects = { ...state.selectedItemsObj }\r\n            var isKeyPresent = Object.keys(updatedObjects).some(value => value == key)\r\n\r\n            //if key exist , we need to add selected items to the exist ones\r\n\r\n            //if key not exist, we need to add more selected item to array\r\n\r\n            if (!isKeyPresent) {\r\n                const item = {};\r\n                updatedObjects[key] = selectedValues\r\n\r\n\r\n            } else {\r\n\r\n                const existSelectedItemsInKey = updatedObjects[key];\r\n                //exclude duplicate\r\n                const ids = new Set(existSelectedItemsInKey.map(item => item.id));\r\n                const mergedSelectedItems = [...existSelectedItemsInKey, ...selectedValues.filter(item => !ids.has(item.id))];\r\n\r\n                updatedObjects[key] = mergedSelectedItems\r\n\r\n            }\r\n            state.selectedItemsObj = updatedObjects;\r\n            //close dropDown\r\n            state.openedDropDownTitle = null;\r\n\r\n        },\r\n        //handle x icon in applied filtered Items\r\n        removeFilteredItem(state, action) {\r\n            const key = action.payload.filterKey;\r\n            let updatedObjects = { ...state.selectedItemsObj }\r\n            let arrayToRemoveFrom = updatedObjects[key];\r\n            const filteredArray = arrayToRemoveFrom.filter(item => item.id != action.payload.id);\r\n            updatedObjects[key] = filteredArray;\r\n            state.selectedItemsObj = updatedObjects;\r\n            console.log(state.selectedItemsObj);\r\n        },\r\n        //clearAll applied filter items\r\n        clearSelectedList(state, action) {\r\n            const updatedObjects = null;\r\n            state.selectedItemsObj = updatedObjects;\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const sliceActions = selectedSilce.actions;\r\n\r\nconst store = createStore(selectedSilce.reducer);\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n// const reducer = (state = initialSatet, action) => {\r\n//     switch (action.type) {\r\n//         case 'OPENDROPDOWN':\r\n//             return {\r\n//                 openedDropDownId: action.id,\r\n//                 selectedItemsObj: state.selectedItemsObj\r\n//             }\r\n\r\n//         case 'ADDSELECTEDITEMS':\r\n//             //remove duplicate if exist then concat \r\n//             // const oldSelectedItem = state.selectedItems.filter(item => !action.payload.selectedItems.some(newItem => newItem.id === item.id));\r\n//             // console.log(action.payload.filterKey)\r\n\r\n//             const key = action.payload.filterKey;\r\n//             const value = action.payload.selectedItems\r\n\r\n//             let updatedObjects = { ...state.selectedItemsObj }\r\n//             console.log(\"updatedObjects\");\r\n//             console.log(updatedObjects);\r\n//             var isKeyPresent = Object.keys(updatedObjects).some(value => value == key)\r\n//             console.log(\"exist\" + isKeyPresent);\r\n\r\n//             //if key exist , we need to add selected items to the exist ones\r\n\r\n//             //if key not exist, we need to add more selected item to array\r\n//             if (!isKeyPresent) {\r\n//                 const item = {};\r\n//                 item[key] = value\r\n//                 console.log(item)\r\n//                 return {\r\n//                     openedDropDownId: null,\r\n//                     selectedItemsObj: { ...state.selectedItemsObj, item }\r\n//                 }\r\n\r\n//             } else {\r\n//                 console.log(\"updatedObjects\");\r\n//                 console.log(updatedObjects);\r\n//                 const selectedList = updatedObjects[key];\r\n//                 const updatedSelectedList = selectedList.concat(value);\r\n//                 updatedObjects[key] = updatedSelectedList;\r\n//                 console.log(\"updatedObjects\");\r\n//                 console.log(updatedObjects);\r\n//                 return {\r\n//                     openedDropDownId: null,\r\n//                     selectedItemsObj: updatedObjects\r\n//                 }\r\n\r\n//             }\r\n\r\n\r\n\r\n\r\n\r\n\r\n//         // case 'RemoveSELECTEDITEMS':\r\n//         //     const updatedList = state.selectedItems.filter(item => !action.payload.removedItems.includes(item.id));\r\n//         //     console.log(action.payload.filterKey)\r\n//         //     return {\r\n//         //         openedDropDownId: state.openedDropDownId,\r\n//         //         selectedItems: updatedList\r\n//         //     }\r\n\r\n//         // case 'RemoveFilteredITEM':\r\n\r\n\r\n//         //     console.log(\"rem \" + action.payload.removedItemId)\r\n//         //     const newList = state.selectedItems.filter(item => item.id != action.payload.removedItemId);\r\n\r\n//         //     return {\r\n//         //         openedDropDownId: state.openedDropDownId,\r\n//         //         selectedItems: newList\r\n//         //     }\r\n\r\n//     }\r\n//     return state;\r\n// }\r\n\r\n","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\UI\\Card.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\UI\\Button.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\Data\\Data.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Header\\Header.js",["62"],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\Menu.js",["63","64"],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\DropDown.js",["65"],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\DropDownButton.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItems.js",["66","67"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sliceActions } from '../../../store/index'\r\nimport Button from '../../UI/Button';\r\nimport Card from '../../UI/Card';\r\nimport classes from './FilteredItems.module.css';\r\nimport FilteredItemsButtonArray from './FilteredItemsButtonArray';\r\n\r\nconst FilteredItems = (props) => {\r\n    const dispatch = useDispatch();\r\n    const allSelectedItems = useSelector(state => state.selectedItemsObj);\r\n\r\n\r\n    const handleCloseClick = (id, filterKey) => {\r\n        dispatch(sliceActions.removeFilteredItem({ id: id, filterKey: filterKey }));\r\n    }\r\n\r\n    const onClear = () => {\r\n        dispatch(sliceActions.clearSelectedList());\r\n    }\r\n\r\n    let filtered = null;\r\n    let clearButtonIsVisible = false;\r\n\r\n\r\n    if (allSelectedItems !== null && allSelectedItems !== undefined) {\r\n\r\n        Object.keys(allSelectedItems).forEach(key => {\r\n\r\n            if (allSelectedItems[key].length !== 0) {\r\n                clearButtonIsVisible = true;\r\n            } else {\r\n                clearButtonIsVisible = false;\r\n            }\r\n        });\r\n\r\n\r\n\r\n        filtered = <Card >\r\n            {Object.keys(allSelectedItems).map((key) => {\r\n                {\r\n                    return <FilteredItemsButtonArray  // call draw for each selectedItems for every filter for size alone , for color alone ...\r\n                        key={key}\r\n                        handleCloseClick={handleCloseClick}\r\n                        perantKey={key}\r\n                        data={allSelectedItems[key]} />\r\n                }\r\n            })}\r\n            {clearButtonIsVisible && <Button onClick={onClear}>Clear All</Button>}\r\n        </Card>\r\n    }\r\n\r\n    return (<React.Fragment>\r\n        {clearButtonIsVisible && filtered}\r\n    </React.Fragment>);\r\n\r\n}\r\n\r\nexport default FilteredItems;","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItemsButtonArray.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItemButton.js",["68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":46,"column":80,"nodeType":"75","messageId":"76","endLine":46,"endColumn":82},{"ruleId":"77","severity":1,"message":"78","line":53,"column":23,"nodeType":"79","messageId":"80","endLine":53,"endColumn":27},{"ruleId":"73","severity":1,"message":"81","line":77,"column":76,"nodeType":"75","messageId":"76","endLine":77,"endColumn":78},{"ruleId":"82","severity":1,"message":"83","line":10,"column":17,"nodeType":"84","endLine":10,"endColumn":54},{"ruleId":"77","severity":1,"message":"85","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":15},{"ruleId":"77","severity":1,"message":"86","line":16,"column":11,"nodeType":"79","messageId":"80","endLine":16,"endColumn":23},{"ruleId":"77","severity":1,"message":"87","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":12},{"ruleId":"77","severity":1,"message":"85","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":15},{"ruleId":"88","severity":1,"message":"89","line":41,"column":17,"nodeType":"90","messageId":"91","endLine":47,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":20,"column":17,"nodeType":"84","endLine":22,"endColumn":45},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'item' is assigned a value but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'classes' is defined but never used.","'handleCancel' is assigned a value but never used.","'Card' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]