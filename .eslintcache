[{"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\index.js":"1","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\App.js":"2","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\store\\index.js":"3","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\UI\\Card.js":"4","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\UI\\Button.js":"5","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\Data\\Data.js":"6","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Header\\Header.js":"7","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\Menu.js":"8","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\DropDown.js":"9","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\DropDownButton.js":"10","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItems.js":"11","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItemsButtonArray.js":"12","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItemButton.js":"13"},{"size":251,"mtime":1642023682315,"results":"14","hashOfConfig":"15"},{"size":1319,"mtime":1642117364577,"results":"16","hashOfConfig":"15"},{"size":3112,"mtime":1642190860830,"results":"17","hashOfConfig":"15"},{"size":244,"mtime":1642026542713,"results":"18","hashOfConfig":"15"},{"size":441,"mtime":1642061049740,"results":"19","hashOfConfig":"15"},{"size":5354,"mtime":1642018055497,"results":"20","hashOfConfig":"15"},{"size":476,"mtime":1642175068540,"results":"21","hashOfConfig":"15"},{"size":2189,"mtime":1642188893260,"results":"22","hashOfConfig":"15"},{"size":3279,"mtime":1642188593460,"results":"23","hashOfConfig":"15"},{"size":788,"mtime":1642190354509,"results":"24","hashOfConfig":"15"},{"size":1854,"mtime":1642163496248,"results":"25","hashOfConfig":"15"},{"size":583,"mtime":1642117912363,"results":"26","hashOfConfig":"15"},{"size":588,"mtime":1642190498686,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e9cpdh",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\index.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\App.js",[],["60","61"],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\store\\index.js",["62","63","64"],"/*\r\nThis file is for Redux , I used createSlice method from redux toolkit lib , This method\r\nAllow us to write code and manipulate state in mutable way , this method will handle the state manipulation it self.\r\n\r\nI used redux to store active selected filte (size , color ,...)\r\nand store selectedItems Object in this format of the same Data shared:\r\n\r\n {\r\n    size: [\r\n        {\r\n            id: \"2x3\",\r\n            title: \"2' X 3'\",\r\n        },\r\n        {\r\n            id: \"3x5\",\r\n            title: \"3' X 5'\",\r\n        }],\r\n        color:[\r\n        ....\r\n        ],....\r\n\r\n\r\n\r\n*/\r\nimport { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = { openedDropDownTitle: null, selectedItemsObj: null }\r\n\r\nconst selectedSilce = createSlice({\r\n    name: \"selectedSilce\",\r\n    initialState,\r\n    reducers: {\r\n        //Handle Active filter like size, color ,,,\r\n        toggleMenue(state, action) {\r\n\r\n            state.openedDropDownTitle = action.payload\r\n\r\n        },\r\n        //Add selected Items that selected and then click apply\r\n        addSelectedItems(state, action) {\r\n            const key = action.payload.filterKey;\r\n            const selectedValues = action.payload.selectedItems\r\n\r\n            let updatedObjects = { ...state.selectedItemsObj }\r\n            var isKeyPresent = Object.keys(updatedObjects).some(value => value == key)\r\n\r\n            //if key exist , we need to add selected items to the exist ones\r\n\r\n            //if key not exist, we need to add more selected item to array\r\n\r\n            if (!isKeyPresent) {\r\n                const item = {};\r\n                updatedObjects[key] = selectedValues\r\n\r\n\r\n            } else {\r\n\r\n                const existSelectedItemsInKey = updatedObjects[key];\r\n                //exclude duplicate\r\n                const ids = new Set(existSelectedItemsInKey.map(item => item.id));\r\n                const mergedSelectedItems = [...existSelectedItemsInKey, ...selectedValues.filter(item => !ids.has(item.id))];\r\n\r\n                updatedObjects[key] = mergedSelectedItems\r\n\r\n            }\r\n            state.selectedItemsObj = updatedObjects;\r\n            //close dropDown\r\n            state.openedDropDownTitle = null;\r\n\r\n        },\r\n        //handle x icon in applied filtered Items\r\n        removeFilteredItem(state, action) {\r\n            const key = action.payload.filterKey;\r\n            let updatedObjects = { ...state.selectedItemsObj }\r\n            let arrayToRemoveFrom = updatedObjects[key];\r\n            const filteredArray = arrayToRemoveFrom.filter(item => item.id != action.payload.id);\r\n            updatedObjects[key] = filteredArray;\r\n            state.selectedItemsObj = updatedObjects;\r\n            console.log(state.selectedItemsObj);\r\n        },\r\n        //clearAll applied filter items\r\n        clearSelectedList(state, action) {\r\n            const updatedObjects = null;\r\n            state.selectedItemsObj = updatedObjects;\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const sliceActions = selectedSilce.actions;\r\n\r\nconst store = createStore(selectedSilce.reducer);\r\n\r\nexport default store;","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\UI\\Card.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\UI\\Button.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\Data\\Data.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Header\\Header.js",["65"],"import React from 'react';\r\nimport logoImage from '../../../assets/logo.jpg'\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (<React.Fragment>\r\n        <header className={classes.header}>\r\n            <div className={classes['main-image']}>\r\n                <img src={logoImage} alt={'image'} />\r\n            </div>\r\n            {/* <h1>Smart Picker</h1> */}\r\n        </header>\r\n\r\n    </React.Fragment>);\r\n\r\n}\r\n\r\nexport default Header;","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\Menu.js",["66","67"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '../../UI/Button';\r\nimport DropDown from './DropDown';\r\nimport classes from './Menu.module.css';\r\n\r\n\r\nconst Menu = (props) => {\r\n\r\n    const [toggleMenu, setToggleMenu] = useState(false)\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n\r\n\r\n    const toggleDropDownButton = () => {\r\n        setToggleMenu(toggleMenu => !toggleMenu)\r\n        console.log(toggleMenu)\r\n    }\r\n    useEffect(() => {\r\n        const changeWidth = () => {\r\n            setScreenWidth(window.innerWidth);\r\n        }\r\n        window.addEventListener('resize', changeWidth)\r\n        return () => {\r\n            window.removeEventListener('resize', changeWidth)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const toggle = (title) => {\r\n        props.toggle(title);\r\n    }\r\n    const handleApply = (selectedItems, key) => {\r\n        props.handleApply(selectedItems, key);\r\n    }\r\n\r\n    const handleCancel = (removedItems, key) => {\r\n        props.handleCancel(removedItems, key);\r\n    }\r\n    //const mobileClassForContainer\r\n    return (<React.Fragment>\r\n        {  (screenWidth > 500) && Object.keys(props.data).map((key) => {\r\n            return <DropDown styleMobile={false} allSelectedItems={props.allSelectedItems} openID={props.openID} key={key} title={key} items={props.data[key]} onToggle={toggle} onApply={handleApply} customClass={\"\"} />\r\n        })}\r\n        <Button onClick={toggleDropDownButton} className={classes.btn}>More Filter</Button>\r\n\r\n\r\n\r\n        {(screenWidth < 500) && Object.keys(props.data).map((key, index) => {\r\n            if (index < 2) {\r\n                return <DropDown styleMobile={false} allSelectedItems={props.allSelectedItems} openID={props.openID} key={key} title={key} items={props.data[key]} onToggle={toggle} onApply={handleApply} />\r\n            }\r\n            else if (toggleMenu && index > 1) {\r\n\r\n                return <DropDown styleMobile={true} allSelectedItems={props.allSelectedItems} openID={props.openID} key={key} title={key} items={props.data[key]} onToggle={toggle} onApply={handleApply} />\r\n            }\r\n\r\n\r\n        })}\r\n\r\n\r\n    </React.Fragment>);\r\n\r\n}\r\n\r\nexport default Menu;","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\DropDown.js",["68"],"import React, { useEffect, useState } from 'react';\r\nimport classes from './DropDown.module.css';\r\nimport Card from '../../UI/Card';\r\nimport Button from '../../UI/Button';\r\nimport DropDownButton from './DropDownButton'\r\n\r\nconst DropDown = (props) => {\r\n\r\n    const [selectedItems, setSelectedItems] = useState([]); //for selected Items with in one dropDown\r\n    const allSelectedItems = props.allSelectedItems;\r\n\r\n\r\n    //listen to outter of  dropdown component click\r\n    useEffect(() => {\r\n        window.addEventListener('click', onClose);\r\n\r\n        return () => {\r\n            window.removeEventListener('click', onClose);\r\n        };\r\n    });\r\n\r\n    const onClose = () => {\r\n        props.onToggle(null);\r\n    }\r\n\r\n    const toggle = (event) => {\r\n        const clearItems = []\r\n        setSelectedItems(clearItems);\r\n\r\n        props.onToggle(props.title);\r\n    }\r\n\r\n\r\n    const handleSelection = (item) => {\r\n        if (!selectedItems.some(exist => exist.id === item.id)) {\r\n            setSelectedItems([...selectedItems, item]);\r\n        }\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        const clearItems = []\r\n        setSelectedItems(clearItems);\r\n    }\r\n\r\n    const handleApply = () => {\r\n        props.onApply(selectedItems, props.title);\r\n    }\r\n\r\n    const onDropDownLayOutClick = (event) => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const numberOfselected = ((allSelectedItems !== null && allSelectedItems[props.title] !== undefined && allSelectedItems[props.title] !== null && allSelectedItems[props.title].length !== 0) ? ' (' + allSelectedItems[props.title].length + ')' : '');\r\n\r\n    const title = props.title + numberOfselected;\r\n    const isOpenMenu = (props.openID === props.title)\r\n\r\n\r\n    const style = (props.styleMobile ? classes.mobileContainer : classes.container);\r\n    const styleLayout = (props.styleMobile ? classes.DropDownLayoutMoblie : classes.DropDownLayout);\r\n\r\n    console.log(props.styleMobile);\r\n    return (<div className={style}>\r\n        <DropDownButton styleMobile={props.styleMobile} isOpen={isOpenMenu} title={title} onClick={toggle} />\r\n        {\r\n            isOpenMenu && (\r\n                <div className={styleLayout} onClick={onDropDownLayOutClick}>\r\n                    <ul >\r\n                        {props.items.map(item => (\r\n                            <li key={item.id}>\r\n                                <Button\r\n                                    className={selectedItems.includes(item) ? classes.selectedButton : ''}//style selected Items buttons\r\n                                    type=\"button\"\r\n                                    onClick={() => handleSelection(item)}>\r\n                                    <span>{item.title}</span>\r\n                                </Button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <footer className={classes.footer}>\r\n                        {selectedItems.length !== 0 && <Button className={classes.button} onClick={() => handleCancel()} >Cancel</Button>}\r\n                        <Button className={classes.button} onClick={() => handleApply()}>Apply</Button>\r\n                    </footer>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    </div>);\r\n\r\n}\r\n\r\nexport default DropDown;","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\Menu\\DropDownButton.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItems.js",["69","70"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sliceActions } from '../../../store/index'\r\nimport Button from '../../UI/Button';\r\nimport Card from '../../UI/Card';\r\nimport classes from './FilteredItems.module.css';\r\nimport FilteredItemsButtonArray from './FilteredItemsButtonArray';\r\n\r\nconst FilteredItems = (props) => {\r\n    const dispatch = useDispatch();\r\n    const allSelectedItems = useSelector(state => state.selectedItemsObj);\r\n\r\n\r\n    const handleCloseClick = (id, filterKey) => {\r\n        dispatch(sliceActions.removeFilteredItem({ id: id, filterKey: filterKey }));\r\n    }\r\n\r\n    const onClear = () => {\r\n        dispatch(sliceActions.clearSelectedList());\r\n    }\r\n\r\n    let filtered = null;\r\n    let clearButtonIsVisible = false;\r\n\r\n\r\n    if (allSelectedItems !== null && allSelectedItems !== undefined) {\r\n\r\n        Object.keys(allSelectedItems).forEach(key => {\r\n\r\n            if (allSelectedItems[key].length !== 0) {\r\n                clearButtonIsVisible = true;\r\n            } else {\r\n                clearButtonIsVisible = false;\r\n            }\r\n        });\r\n\r\n\r\n\r\n        filtered = <Card >\r\n            {Object.keys(allSelectedItems).map((key) => {\r\n                {\r\n                    return <FilteredItemsButtonArray  // call draw for each selectedItems for every filter for size alone , for color alone ...\r\n                        key={key}\r\n                        handleCloseClick={handleCloseClick}\r\n                        perantKey={key}\r\n                        data={allSelectedItems[key]} />\r\n                }\r\n            })}\r\n            {clearButtonIsVisible && <Button onClick={onClear}>Clear All</Button>}\r\n        </Card>\r\n    }\r\n\r\n    return (<React.Fragment>\r\n        {clearButtonIsVisible && filtered}\r\n    </React.Fragment>);\r\n\r\n}\r\n\r\nexport default FilteredItems;","C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItemsButtonArray.js",[],"C:\\Users\\adawood\\Documents\\Amina FE\\01-starting-project\\smart-picker-project\\src\\components\\Layout\\FilteredItems\\FilteredItemButton.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":46,"column":80,"nodeType":"77","messageId":"78","endLine":46,"endColumn":82},{"ruleId":"79","severity":1,"message":"80","line":53,"column":23,"nodeType":"81","messageId":"82","endLine":53,"endColumn":27},{"ruleId":"75","severity":1,"message":"83","line":77,"column":76,"nodeType":"77","messageId":"78","endLine":77,"endColumn":78},{"ruleId":"84","severity":1,"message":"85","line":10,"column":17,"nodeType":"86","endLine":10,"endColumn":54},{"ruleId":"79","severity":1,"message":"87","line":35,"column":11,"nodeType":"81","messageId":"82","endLine":35,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":47,"column":74,"nodeType":"90","messageId":"91","endLine":47,"endColumn":76},{"ruleId":"79","severity":1,"message":"92","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":12},{"ruleId":"79","severity":1,"message":"93","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":41,"column":17,"nodeType":"96","messageId":"97","endLine":47,"endColumn":18},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'item' is assigned a value but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'handleCancel' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Card' is defined but never used.","'classes' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]